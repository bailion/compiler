name: Release

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: build
        run: (cd cli && cargo build --release)
      - name: build lsp
        run: (cd lsp && cargo build --release)
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: pseudo-release-${{ matrix.os }}
          if-no-files-found: error
          path: |
            rust-toolchain
            target/release/pseudo*
            target/release/pseudo-lsp*
            !target/release/pseudo.d
            !target/release/pseudo-lsp.d

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: download
        uses: actions/download-artifact@v2
      - name: package
        shell: bash
        run: |
          for os in ubuntu-latest windows-latest macos-latest
          do
            echo "Package pseudo artifact for $os"
            cd pseudo-release-$os
            mv target/release/* .
            rm -rf target
            zip -r pseudo.zip *
            cd ..
          done
      - name: Create release tag
        shell: bash
        run: echo "TAG_NAME=$(date +v-%Y-%m-%d-%H%M)" >> $GITHUB_ENV
      - name: Create a nightly release
        id: create_release
        uses: viperproject/create-nightly-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Nightly Release ${{ env.TAG_NAME }}
          keep_num: 2
      - name: Upload release asset for Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pseudo-release-ubuntu-latest/pseudo.zip
          asset_name: pseudo-release-ubuntu.zip
          asset_content_type: application/zip
      - name: Upload release asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pseudo-release-windows-latest/pseudo.zip
          asset_name: pseudo-release-windows.zip
          asset_content_type: application/zip
      - name: Upload release asset for MacOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pseudo-release-macos-latest/pseudo.zip
          asset_name: pseudo-release-macos.zip
          asset_content_type: application/zip
