mod parse_reparse {
    use crate::parse::{
        utils::{Input, Parse},
        Ast,
    };

    fn inner(input: &str) {
        let ast = match Ast::parse(&mut Input::new(input)) {
            Ok(t) => t,
            Err(_) => return,
        };
        let output = ast.to_string();
        let reparsed = Ast::parse(&mut Input::new(&output)).expect("failed to reparse ast");
        assert_eq!(ast, reparsed);
    }

    codegen::regressions! {
        inner,
        [
            "-Í“", "x7=Â…27=", "Û†", "-[YYYYY
            0YYYYY",
            "(-Ù«55580,",
            "(Â…X~Y",
            "=[",
            "-â€ƒY",
            "([385",
            "(-[=18J/3",
            "4Â…9",
            "Þ¶-W-",
            "Â…z -",
            "XY=-[Y",
            "(È§0a782(",
            "YY=-ÍªYZYY=",
            "Z=Ë€Y",
            "[7-"
        ]
    }
}
